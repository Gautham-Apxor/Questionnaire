Javascript Questions:

1. Difference between var, let & const
2. Can you explain about hoisting and temporal deadzone
3. Differentiate between function statement and function expression
4. Explain closures
5. Explain event bubbling and event capturing phase and event delegation
6. Explain debounce and throtling
7. I say javascript is synchronous single threaded language, justify.? (if candidate answers then we can further question about web workers, service workers etc)
8. What are web Apis, name a few which are used in common
9. What is javascript runtime environment? Explain in detail about event loop, call stack, task queue, microtask queue etc?
10. Difference between arrow function and normal function(expect answer in terms of this keyword)
11. Explain "this" keyword? How it's value varies in different scenarios?
12. Why do we sometime write "use-strict" in js file
13. Explain Prototype and prototypical inheritance?
14. Explain scope chaining
15 write polyfill for any of the method (call, apply or bind)? Why and when do we write polyfill?
16. Why functions are called first class objects? what are higher order functions?
17. Explain promises in js with any example? Differentiate between promise and async/await
18. What does fetch return
19. Are access specifiers available in js? ts?

HTML & CSS Questions:

1. What is the purpose of writing Doctype declaration at the begining of html file
2. What are ARIA roles and how do they improve web accessibility?
3. How do you handle SEO in HTML? Discuss meta tags and structured data.(Explain the importance of meta tags and how structured data helps search engines).
4. Explain the concept of web components. How are they implemented using HTML? (Discuss custom elements, shadow DOM, HTML templates, etc.)
5. Explain the CSS Box Model.
6. What is the CSS Specificity hierarchy? How does it affect which styles are applied to an element? (Explain the specificity calculation and its impact on style conflicts.)
7. Explain the concept of CSS custom properties (variables). How are they used and what are their advantages?
8. Explain psuedo classes and elements an name a few.(Discuss how custom properties enable reusable and dynamic styling.)
9. How do you use data- attributes in HTML, and what are some common use cases for them?(Provide an example of accessing and manipulating these attributes using JavaScript, such as with dataset property methods).
10. What are CSS Grid and Flexbox? Compare their use cases and key differences. (Discuss layout scenarios where each is more appropriate.)

Typescript Questions:

1. What are the key differences between TypeScript and JavaScript?
2.Difference between type and interface in ts? when will you use what?
3. What are Generics in TypeScript and how do they improve code reusability? Provide an example.
4. Explain how TypeScript's enum type works. What are some common use cases for enums in a TypeScript application?
5. What is the role of the tsconfig.json file in a TypeScript project? What are some key options you can configure?
6. Discuss various strict flags like strictNullChecks, noImplicitAny, etc., and their impact on code quality.
7. Is typescript a dependancy or dev dependancy? justify
8. Do you have idea about declaration files in ts? what is the purpose of writing it.

Frontend Questions:

1. How will you scaffold a project from scratch? what are all the dev dependencies you install and what framework you prefer and what dependencies you install
2. What are linters, formatters, module bundlers used in application? what build tools does vite and create-react-app use under the hood?
3. Explain about Transpilation, compilation, bundling, tree shaking, HMR etc
4. What happens when you search for something in google search bar? what happens under the hood?
5. Difference between http and https connection?
6. Explain the concept of a Single Page Application (SPA). What are some common challenges associated with SPAs?
7. Explain differnce between server side rendering and client side rendering with some examples.
8.What are cookies, and how do they differ from local storage and session storage in terms of persistence and security?
9. What is CORS (Cross-Origin Resource Sharing) and why is it important?
10. What is the difference between a 4xx and a 5xx HTTP response code? ( Explain that 4xx codes represent client errors, while 5xx codes represent server errors, and provide examples of each.)
11. Discuss how codes like 304 Not Modified are used in caching scenarios to indicate that the cached version of a resource is still valid.
12. What are Progressive Web Apps (PWAs)? What are the key features that make an app a PWA? (Describe the characteristics of PWAs, such as offline support, service workers, and manifest files).

Reactjs Questions:

1. What is the virtual DOM and how does React use it to improve performance?
2. What are React's Context API and its primary use cases? How does it compare to prop drilling?

Server Questions:
1. Difference between monolith and microservices architecture?
2. Explain the difference between a process and a thread?


